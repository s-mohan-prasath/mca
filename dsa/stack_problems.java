public class stack_problems {
    public stack_problems(){

    }
    public void prob1(Stack<Integer> s,int[] arr){
        /*
1)	Given a stack of N numbers and an array of numbers. Count the numbers of pop operations required to get each element of the array. Once an element is popped then itâ€™s not pushed back again. Assume that the all the elements from the array present inside the stack initially.
Input: N = 5
Stack: 6 4 3 2 1
Array: 6 3 4 1 2
Output: 1 2 0 2 0
        */

        int len = arr.length;
        SLinkedList<Integer> ll = new SLinkedList<>();
        int i = 0;


    }
}
